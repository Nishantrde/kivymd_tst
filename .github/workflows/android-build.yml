# .github/workflows/android-build.yml
name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-apk:
    runs-on: ubuntu-24.04

    steps:
      # 1. Check out your code
      - uses: actions/checkout@v3

      # 2. Use JDK 17 so sdkmanager (cmdline-tools v16+) runs without error
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      # 3. Install Android SDK cmdline-tools + platform-tools + build-tools & platform
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          # folded scalar (!!) ensures three separate args,
          # installing aidl via build-tools;30.0.3  :contentReference[oaicite:0]{index=0}
          packages: >
            platform-tools
            build-tools;30.0.3
            platforms;android-33
          accept-android-sdk-licenses: true

      # 4. Add the Android tool dirs to PATH so `aidl` is found :contentReference[oaicite:1]{index=1}
      - name: Add Android tools to PATH
        run: |
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/build-tools/30.0.3" >> $GITHUB_PATH

      # 5. Set up Python & Buildozer (with Cython)
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Buildozer & Cython
        run: |
          python -m pip install --upgrade pip
          python -m pip install buildozer Cython

      # 6. Build the debug APK
      - name: Build Debug APK
        run: |
          # Uncomment once if you need to generate buildozer.spec:
          # buildozer init
          buildozer -v android debug

      # 7. Upload the APK artifact
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: myapp-debug-apk
          path: bin/*.apk
